;;;; ==========================================================================
;;;; @title Factory: a contract that creates other contracts
;;;; @author Noel Maersk <veox>

(seq
  (include "./common.lll.inc")

  ;; ==========================================================================
  ;; STORAGE LAYOUT

  (def '*storloc-greeting* 0x1337)

  ;; ==========================================================================
  ;; CONSTANTS

  (def '*initial-greeting* 42)

  (def '*greet*        0xcfae3217) ; greet()
  (def '*greeting*     0xef690cc0) ; greeting(): public storage in Solidity
  (def '*set-greeting* 0xb2010978) ; setGreeting(string)

  ;; the most important product of any factory is compliant workers
  (def '*stamp*        0xc85e07b9) ; stamp()

  (def '*stamped*                  ; stamped(address,address)
       0x9f0f13e03835c7dcca2675cb51976e07bd186b2e351cefe0db24ec0fe62105ef)

  ;; ==========================================================================
  ;; INIT

  ;; ==========================================================================
  ;; CODE

  (returnlll                    ; this factory will have code...
   (seq
     unpayable
     mstore-function-selector

     (function *stamp*
               (seq
                 (emit3
                  *stamped*
                  (caller)
                  (create       ; ...that creates greeters...
                   (seq
                     (sstore *storloc-greeting* *initial-greeting*)

                     (returnlll ; ...with the following code
                      (seq
                        unpayable
                        mstore-function-selector

                        ;; change greeting value in storage
                        (def 'new-greeting (calldataload 0x04))
                        (function *set-greeting*
                                  (seq
                                    (sstore *storloc-greeting* new-greeting)
                                    (stop)))

                        ;; return greeting value from storage
                        (function *greet*
                                  (return (sload *storloc-greeting*)))

                        ;; for compatibility with Greeter.sol: "public storage variable"
                        (function *greeting*
                                  (return (sload *storloc-greeting*)))

                        ;; fallback
                        (panic)))))
                  0x0) ; emit3 data (none)
                 )))))
